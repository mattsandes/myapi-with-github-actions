name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin' # Adotei a distribuição mais recente conhecida como 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin' # Adotei a distribuição mais recente conhecida como 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapi-with-docker:latest .

      - name: Deploy to production
        run: |
          docker tag ${{secrets.DOCKER_USERNAME}}/myapi-with-docker:latest ${{secrets.DOCKER_USERNAME}}/myapi-with-docker:${{ github.run_id }}
          docker push ${{secrets.DOCKER_USERNAME}}/myapi-with-docker:${{ github.run_id }}
          docker push ${{secrets.DOCKER_USERNAME}}/myapi-with-docker:latest
